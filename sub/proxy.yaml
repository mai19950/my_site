
port: 1080           # HTTP 代理端口
socks-port: 1081     # Socks 端口
redir-port: 1082     # Redir 端口
mixed-port: 1083     # 混合端口
allow-lan: true      # 允许局域网连接
bind-address: "*"    # 地址绑定
mode: rule           # 规则模式
log-level: info      # 日志级别
ipv6: false          # IPV6开关
external-controller: 127.0.0.1:9090

dns:
  enable: true       # 不使用系统 DNS
  ipv6: false        # 关闭 IPV6
  listen: 0.0.0.0:53 # dns 监听
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "*.lan"
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
  nameserver:        # 默认 DNS 服务
    - 223.5.5.5
    - 119.29.29.29
  fallback:          # 国外 DNS 服务器
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - https://dns.alidns.com/dns-query
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
#========= 建立锚点 =========#

# 策略组引用
local_proxies: &s1 {proxies: ["LOCAL", "LOCAL_1", "LOCAL_IPAD", "LOCAL_IPAD_1", "美国5300", "台湾10000", "日本99999", "香港777", "美国46372", "美国15544", "法国61770", "美国47262", "日本13989", "美国8443", "美国8080"]}

pr:   &a3 {type: select,   proxies: [♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, DIRECT] }
# p:    &a1 {type: http,     interval: 900,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 300} }
p:    &a1 {type: http,     health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 300} }
auto: &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 300, <<: *s1 }
use:  &a2 {type: select,   <<: *s1 }
c:    &a6 {type: http,     behavior: classical, interval: 86400}
d:    &a5 {type: http,     behavior: domain,    interval: 86400}
i:    &a7 {type: http,     behavior: ipcidr,    interval: 86400}

proxy-providers: null
    
proxies:
  - {"name": "LOCAL", "type": "socks5", "server": "192.168.0.110", "port": 1081}
  - {"name": "LOCAL_1", "type": "socks5", "server": "192.168.0.110", "port": 1081}
  - {"name": "LOCAL_IPAD", "type": "socks5", "server": "192.168.0.112", "port": 9988}
  - {"name": "LOCAL_IPAD_1", "type": "socks5", "server": "192.168.0.112", "port": 9988}
  - {"name": "美国5300", "type": "hysteria2", "server": "192-227-152-86.nip.io", "port": 61001, "password": "5CBqBh6MeDq6GajcilBiDg==", "skip-cert-verify": true, "sni": "192-227-152-86.nip.io"}
  - {"type": "vless", "name": "台湾10000", "server": "gy01.hunheiydd.xyz", "port": 15823, "uuid": "459b4a80-bd61-4ecd-a26b-e9c1809d9e45", "skip-cert-verify": true, "udp": true, "tls": false, "network": "tcp", "servername": "www.yahoo.com"}
  - {"type": "vless", "name": "日本99999", "server": "csuzhou01.1cooldns.com", "port": 14548, "uuid": "459b4a80-bd61-4ecd-a26b-e9c1809d9e45", "skip-cert-verify": true, "udp": true, "tls": false, "network": "tcp", "servername": "www.nvidia.com"}
  - {"type": "vless", "name": "香港777", "server": "test123.zlqhdns.top", "port": 10860, "uuid": "459b4a80-bd61-4ecd-a26b-e9c1809d9e45", "skip-cert-verify": true, "udp": true, "tls": false, "network": "tcp", "servername": "www.nvidia.com"}
  - {"type": "vless", "name": "美国46372", "server": "zhee01.dynu.net", "port": 46372, "uuid": "459b4a80-bd61-4ecd-a26b-e9c1809d9e45", "skip-cert-verify": true, "udp": true, "tls": false, "network": "tcp", "servername": "www.amazon.com"}
  - {"name": "美国15544", "type": "hysteria2", "server": "108.181.5.130", "port": 15544, "password": "dongtaiwang.com", "skip-cert-verify": true, "sni": "apple.com"}
  - {"name": "法国61770", "type": "hysteria2", "server": "51.159.226.1", "port": 61770, "password": "dongtaiwang.com", "skip-cert-verify": true, "sni": "www.bing.com"}
  - {"name": "美国47262", "type": "hysteria2", "server": "164.152.19.229", "port": 47262, "password": "b72ba5d5-2d5e-45b7-93b5-236d343baa7c", "skip-cert-verify": true, "sni": "www.bing.com"}
  - {"type": "vless", "name": "日本13989", "server": "csuzhou01.1cooldns.com", "port": 13989, "uuid": "459b4a80-bd61-4ecd-a26b-e9c1809d9e45", "skip-cert-verify": true, "udp": true, "tls": false, "network": "tcp", "servername": "gateway.icloud.com"}
  - {"name": "美国8443", "type": "hysteria2", "server": "a0ee1004-sum4g0-t7qex7-1supq.hy2.gotochinatown.net", "port": 8443, "password": "7af3db60-b2d9-11ef-88ab-f23c913c8d2b", "skip-cert-verify": true, "sni": "a0ee1004-sum4g0-t7qex7-1supq.hy2.gotochinatown.net"}
  - {"type": "vless", "name": "美国8080", "server": "45.131.4.73", "port": 8080, "uuid": "c5293efa-28f8-4a0f-8f34-541078970cee", "skip-cert-verify": true, "udp": true, "tls": false, "network": "ws", "servername": "gozargah.validbv7996.ir", "ws-opts": {"path": "/", "headers": {"Host": "gozargah.validbv7996.ir"}}}
proxy-groups:
#分流分组
  - {name: 🚀 手动切换, <<: *a2}
  - {name: 🌏 全球加速, <<: *a3}
  - {name: 🤖 OpenAi,   type: select, proxies: [🇺🇲 美国节点]}
  - {name: 🎬 国际媒体, <<: *a3}
  - {name: 📟 电报消息, <<: *a3}
  - {name: 🌌 谷歌服务, <<: *a3}
  - {name: 🍎 苹果服务, <<: *a3}
  - {name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点]}
  - {name: 🐦 推特服务, <<: *a3}
  - {name: 🎮 游戏平台, <<: *a3}
  - {name: 🆎 AdBlock, type: select, proxies: [REJECT]}
  - {name: 🐟 兜底分流, <<: *a3}
  - {name: 📺 日本媒体, type: select, proxies: [🇯🇵 日本节点]}
  
#节点分组
  - {name: ♻️ 自动选择, <<: *a4}
  - {name: 🇭🇰 香港节点, <<: *a4, filter: "港|HK|(?i)Hong"           }             # a4更改为a2，即为手动选择
  - {name: 🇯🇵 日本节点, <<:  *a4, filter: "日|东京|JP|(?i)Japan"     }             # a4更改为a2，即为手动选择     
  - {name: 🇨🇳 台湾节点, <<: *a4, filter: "台|湾|TW|(?i)Taiwan"      }             # a4更改为a2，即为手动选择
  - {name: 🇺🇲 美国节点, <<: *a4, filter: "美|US|(?i)States|American"}             # a4更改为a2，即为手动选择
  - {name: 🇸🇬 狮城节点, <<: *a4, filter: "新|坡|SG|(?i)Singapore"    }            # a4更改为a2，即为手动选择

# 分流规则 
rule-providers:
  Ad:          {<<: *a5, url: https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules_domainset.txt,                                     path: ./ruleset/anti-ad-clash.yaml}
  OpenAi:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml,                      path: ./ruleset/OpenAi.yaml       }
  BiliBili:    {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBili/BiliBili.yaml,                  path: ./ruleset/BiliBili.yaml     }
  Bahamut:     {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Bahamut/Bahamut.yaml,                    path: ./ruleset/Bahamut.yaml      } 
  GlobalMedia: {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml,  path: ./ruleset/GlobalMedia.yaml  }
  Apple:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml,              path: ./ruleset/Apple.yaml        }
  Github:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml,                      path: ./ruleset/Github.yaml       }
  Microsoft:   {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml,                path: ./ruleset/Microsoft.yaml    }
  Google:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml,                      path: ./ruleset/Google.yaml       }
  Telegram:    {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml,                  path: ./ruleset/Telegram.yaml     }
  Twitter:     {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml,                    path: ./ruleset/Twitter.yaml      }
  Game:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Game/Game.yaml,                          path: ./ruleset/Game.yaml         }
  ProxyLite:   {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ProxyLite/ProxyLite.yaml,                path: ./ruleset/ProxyLite.yaml    }
  MyProxy:     {<<: *a6, url: https://raw.githubusercontent.com/mai19950/my_site/refs/heads/main/sub/customs/proxy.yaml,                          path: ./ruleset/MyProxy.yaml      }
  Japan:       {<<: *a6, url: https://raw.githubusercontent.com/mai19950/my_site/refs/heads/main/sub/customs/japan.yaml,                          path: ./ruleset/Japan.yaml      }
  Direct:      {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Direct/Direct.yaml,                      path: ./ruleset/Direct.yaml       }
  Lan:         {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan.yaml,                            path: ./ruleset/Lan.yaml          }
  Download:    {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Download/Download.yaml,                  path: ./ruleset/Download.yaml     }
  ChinaIP:     {<<: *a7, url: https://cdn.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/clash-rule-provider.yml,                                     path: ./ruleset/ChinaIP.yaml      }


# 分流Policy 
rules:
  - RULE-SET,Ad,🆎 AdBlock
  - RULE-SET,OpenAi,🤖 OpenAi
  - RULE-SET,BiliBili,📺 哔哩哔哩
  - RULE-SET,Bahamut,📺 哔哩哔哩
  - RULE-SET,GlobalMedia,🎬 国际媒体
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Github,🌏 全球加速
  - RULE-SET,Microsoft, 🌏 全球加速
  - RULE-SET,Google,🌌 谷歌服务
  - RULE-SET,Telegram,📟 电报消息
  - RULE-SET,Twitter,🌏 全球加速
  - RULE-SET,Game,🎮 游戏平台
  - RULE-SET,ProxyLite,🌏 全球加速
  - RULE-SET,MyProxy,🌏 全球加速
  - RULE-SET,Japan,📺 日本媒体
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Lan,DIRECT
  - RULE-SET,Download,DIRECT
  - RULE-SET,ChinaIP,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🐟 兜底分流


# TUN模式是通过在操作系统上安装一个虚拟网卡来实现的，它可以接管所有的网络流量，并将流量转发至Clash，然后由Clash发出请求
# Windows 系统中如何启用TUN模式
# 1、运行 Clash For Windows, 确保使用规则模式，并可以联网
# 2、点击 General中的Service Mode右侧的Manage按钮，在弹出窗口中选择schtasks，安装服务模式。安装完成后，应用程序会自动重启，Service Mode右侧的地球图标变为绿色表示安装成功
# 3、点击 General中的TUN Mode右侧的开关以启动TUN模式
